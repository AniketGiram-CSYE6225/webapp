name: Create GCP AMI CI

on:
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Packer_Validation_WorkFlow:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: setting up packer
        uses: hashicorp/setup-packer@main
      - name: Authentication for gcloud
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
      - name: setting up gcp
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: creating packer env file
        env:
          PACKER_ENVIRONMENT: ${{secrets.PACKER_ENVIRONMENT}}
        run: echo "$PACKER_ENVIRONMENT" > gcp-ami.pkrvars.hcl
      - name: creating zip file
        run: |
          rm -rf webapp.zip
          zip -r webapp.zip . -x ".git/*" ".github/*"
      - name: Run `packer init`
        run: "packer init ./gcp-ami.pkr.hcl"
      - name: Run `packer format`
        run: "packer fmt -var-file=gcp-ami.pkrvars.hcl ./gcp-ami.pkr.hcl"
      - name: Run `packer validate`
        run: "packer validate -var-file=gcp-ami.pkrvars.hcl ./gcp-ami.pkr.hcl"
      # - name: Build Packer Image
      #   run: "packer build -var-file=gcp-ami.pkrvars.hcl ./gcp-ami.pkr.hcl"
      - name: Get Secret value
        run: |
          gcloud secrets versions access latest --secret=webapp-secret --format='value(payload.data)' > webapp-secret.json
      - name: Create Instance Template
        run: |
          JSON_DATA=$(cat webapp-secret.json)
          BOOT_DISK_TYPE=$(echo "$JSON_DATA" | jq -r '.boot_disk_type')
          IMAGE_PROJECT=$(echo "$JSON_DATA" | jq -r '.image_project')
          MACHINE_TYPE=$(echo "$JSON_DATA" | jq -r '.machine_type')
          MAINTENANCE_POLICY=$(echo "$JSON_DATA" | jq -r '.maintenance_policy')
          NETWORK=$(echo "$JSON_DATA" | jq -r '.network_interface.network')
          SUBNETWORK=$(echo "$JSON_DATA" | jq -r '.network_interface.subnetwork')
          REGION=$(echo "$JSON_DATA" | jq -r '.region')
          SCOPES=$(echo "$JSON_DATA" | jq -r '.scope')
          SERVICE_ACCOUNT=$(echo "$JSON_DATA" | jq -r '.service_account')
          TAG=$(echo "$JSON_DATA" | jq -r '.tag')
          gcloud compute instance-templates create webapp-from-git-temp \
            --instance-template-region="$REGION" \
            --tags="$TAG" \
            --machine-type="$MACHINE_TYPE" \
            --region="$REGION" \
            --network-interface=network="$NETWORK",subnet="$SUBNETWORK" \
            --service-account="$SERVICE_ACCOUNT" \
            --scopes="$SCOPES" \
            --maintenance-policy="$MAINTENANCE_POLICY" \
            --image-project="$IMAGE_PROJECT" \
            --image-family="nscc-custom-image" \
            --boot-disk-type="$BOOT_DISK_TYPE" \
            --metadata=startup-script=\#\!/bin/bash$'\n'file=/opt/webapp/.env$'\n'if\ \[\ \!\ -f\ \$file\ \]\;\ then$'\n'\ \ sudo\ touch\ \$file$'\n'\ \ sudo\ echo\ \"DIALECT=mysql\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"DB_NAME=webapp\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"DB_USERNAME=webapp\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"DB_PASSWORD=sa5Vd\]XlB\]l0lV_R\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"HOST=10.84.0.2\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"GCP_PROJECT_ID=nscc-prod-2404\"\ \>\>\ \$file$'\n'\ \ sudo\ echo\ \"PUB_SUB_TOPIC_NAME=verify_email\"\ \>\>\ \$file$'\n'fi$'\n'
